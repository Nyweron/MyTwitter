var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(e,o){e.$on("login",function(o,t){e.currentUser=t}),e.$on("register",function(o,t){e.registerResponse=t}),e.disableRegisterResponse=function(){e.registerResponse=null},e.logout=function(){console.log("logout"),e.currentUser=null,o.logout()}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(e,o){e.login=function(t,n){o.login(t,n).then(function(o){e.$emit("login",o)})}}]),app.controller("PostsCtrl",["$scope","PostsSvc",function(e,o){e.addPost=function(){e.postBody&&o.create({username:"nyweron",body:e.postBody}).success(function(o){e.postBody=null})},e.$on("ws:new_post",function(o,t){e.$apply(function(){console.log("fdsfd"),e.posts.unshift(t)})}),o.fetch().success(function(o){e.posts=o})}]),app.service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/posts")},this.create=function(o){return e.post("/posts",o)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,o){e.register=function(t,n){e.nameRequired="",e.passwordRequired="",e.nameRequired=t?"":"Name Required",e.passwordRequired=n?"":"Password Required",t&&n&&o.register(t,n).then(function(o){e.$emit("register","Konto zarejestrowane poprawnie, zaloguj siÄ™."),e.username="",e.password=""})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"ApplicationCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(e){var o=this;o.getUser=function(){return e.get("/users").then(function(e){return e.data})},o.login=function(t,n){return e.post("/sessions",{username:t,password:n}).then(function(t){return o.token=t.data,e.defaults.headers.common["X-Auth"]=t.data,o.getUser()})},o.register=function(o,t){return e.post("/users",{username:o,password:t}).then(function(e){return e})},o.logout=function(){delete e.defaults.headers.common["X-Auth"]}}]),angular.module("app").run(["$rootScope",function(e){var o=new WebSocket("ws://localhost:3002");o.onopen=function(){console.log("WebSocket connected")},o.onmessage=function(o){console.log("fdsfd");var t=JSON.parse(o.data);console.log("payload.topic:"+t.topic),e.$broadcast("ws:"+t.topic,t.data)}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
