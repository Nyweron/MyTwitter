var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location",function(t,e,n){t.$on("login",function(e,n){t.currentUser=n}),t.$on("register",function(e,n){t.registerResponse=n}),t.disableRegisterResponse=function(){t.registerResponse=null},t.logout=function(){t.currentUser=null,e.logout(),n.path("/")},e.isSessionActive()&&(e.setXAuth(),e.getUser().then(function(e){t.currentUser=e}))}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(t,e,n){t.login=function(o,r){e.login(o,r).then(function(e){t.$emit("login",e),n.path("/")})}}]),app.controller("PostsCtrl",["$scope","PostsSvc",function(t,e){t.addPost=function(){t.postBody&&e.create({username:"nyweron",body:t.postBody}).success(function(e){t.postBody=null})},t.$on("ws:new_post",function(e,n){t.$apply(function(){t.posts.unshift(n)})}),e.fetch().success(function(e){t.posts=e})}]),app.service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/posts")},this.create=function(e){return t.post("/posts",e)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,e){t.register=function(n,o){t.nameRequired="",t.passwordRequired="",t.nameRequired=n?"":"Name Required",t.passwordRequired=o?"":"Password Required",n&&o&&e.register(n,o).then(function(e){t.$emit("register","Konto zarejestrowane poprawnie, zaloguj siÄ™."),t.username="",t.password=""})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"ApplicationCtrl",templateUrl:"posts.html"})}]),angular.module("app").service("UserSvc",["$http","$window",function(t,e){var n=this;n.getUser=function(){return t.get("/users").then(function(t){return t.data})},n.login=function(e,o){return t.post("/sessions",{username:e,password:o}).then(function(e){return n.token=e.data,n.setToken(n.token),t.defaults.headers.common["X-Auth"]=e.data,n.getUser()})},n.register=function(e,n){return t.post("/users",{username:e,password:n}).then(function(t){return t})},n.logout=function(){e.localStorage.clear(),delete t.defaults.headers.common["X-Auth"]},n.setToken=function(t){return e.localStorage.token=t},n.getToken=function(){return e.localStorage.token},n.isSessionActive=function(){return!!e.localStorage.token},n.setXAuth=function(){return t.defaults.headers.common["X-Auth"]=n.getToken()}}]),angular.module("app").service("WebSocketSvc",["$rootScope",function(t){function e(){return"https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host}var n;this.connect=function(){(n=new WebSocket(e())).onopen=function(){console.log("WebSocket connected")},n.onmessage=function(e){var n=JSON.parse(e.data);t.$broadcast("ws:"+n.topic,n.data)}},this.send=function(t,e){var o=JSON.stringify({topic:t,data:e});n.send(o)}}]).run(["WebSocketSvc",function(t){t.connect()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
