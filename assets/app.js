var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location",function(e,t,n){e.$on("login",function(t,n){e.currentUser=n}),e.$on("register",function(t,n){e.registerResponse=n}),e.disableRegisterResponse=function(){e.registerResponse=null},e.logout=function(){e.currentUser=null,t.logout(),n.path("/")},t.isSessionActive()&&(t.setXAuth(),t.getUser().then(function(t){e.currentUser=t}))}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(e,t,n){e.login=function(o,r){t.login(o,r).then(function(t){e.$emit("login",t),n.path("/")})}}]),app.controller("PostsCtrl",["$scope","PostsSvc",function(e,t){e.addPost=function(){e.postBody&&t.create({username:"nyweron",body:e.postBody}).success(function(t){e.postBody=null})},e.$on("ws:new_post",function(t,n){e.$apply(function(){e.posts.unshift(n)})}),t.fetch().success(function(t){e.posts=t})}]),app.service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/posts")},this.create=function(t){return e.post("/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,t){e.register=function(n,o){console.log("tempp"),e.nameRequired="",e.passwordRequired="",e.nameRequired=n?"":"Name Required",e.passwordRequired=o?"":"Password Required",n&&o&&t.register(n,o).then(function(t){e.$emit("register","Konto zarejestrowane poprawnie, zaloguj siÄ™."),e.username="",e.password=""})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"ApplicationCtrl",templateUrl:"posts.html"})}]),angular.module("app").service("UserSvc",["$http","$window",function(e,t){var n=this;n.getUser=function(){return e.get("/users").then(function(e){return e.data})},n.login=function(t,o){return e.post("/sessions",{username:t,password:o}).then(function(t){return n.token=t.data,n.setToken(n.token),e.defaults.headers.common["X-Auth"]=t.data,n.getUser()})},n.register=function(t,n){return e.post("/users",{username:t,password:n}).then(function(e){return e})},n.logout=function(){t.localStorage.clear(),delete e.defaults.headers.common["X-Auth"]},n.setToken=function(e){return t.localStorage.token=e},n.getToken=function(){return t.localStorage.token},n.isSessionActive=function(){return!!t.localStorage.token},n.setXAuth=function(){return e.defaults.headers.common["X-Auth"]=n.getToken()}}]),angular.module("app").service("WebSocketSvc",["$rootScope",function(e){function t(){return"https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host}var n;this.connect=function(){(n=new WebSocket(t())).onopen=function(){console.log("WebSocket connected")},n.onmessage=function(t){var n=JSON.parse(t.data);e.$broadcast("ws:"+n.topic,n.data)}},this.send=function(e,t){var o=JSON.stringify({topic:e,data:t});n.send(o)}}]).run(["WebSocketSvc",function(e){e.connect()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
